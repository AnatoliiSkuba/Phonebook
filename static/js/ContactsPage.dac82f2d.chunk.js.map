{"version":3,"file":"static/js/ContactsPage.dac82f2d.chunk.js","mappings":"2NACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAgI,4B,SCMjH,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAqBE,EAAAA,EAAAA,MAAdC,GAAP,eAgBMC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,KAQhB,OACE,kBAAMC,UAAWC,EAAQC,SA/BN,SAAAC,GACnBA,EAAEC,iBAEFZ,EAAKa,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,OAASA,KAClCmB,MAAM,GAAD,OAAInB,EAAJ,4BACLO,EAAW,CACTP,KAAMA,EACNE,OAAQA,IAGdD,EAAQ,IACRE,EAAU,KAoBV,WACE,mBAAOS,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXO,KAAK,OACLpB,KAAK,OACLW,MAAOX,EACPqB,QAAQ,yHACRC,MAAM,yIACNC,SAAUf,EACVgB,UAAQ,QAGZ,mBAAOZ,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXO,KAAK,MACLpB,KAAK,SACLW,MAAOT,EACPmB,QAAQ,yFACRC,MAAM,+FACNC,SAAUf,EACVgB,UAAQ,QAIZ,mBAAQZ,UAAWC,EAAUO,KAAK,SAAlC,4BCxEN,MAAwB,sBAAxB,EAAsD,sBCEvC,SAASK,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,OAAQlB,EAAgB,EAAhBA,aACvC,OACE,mBAAOI,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXO,KAAK,OACLpB,KAAK,SACLW,MAAOe,EACPJ,MAAM,yIACNC,SAAU,SAAAR,GAAC,OAAIP,EAAaO,EAAEL,OAAOC,QACrCa,UAAQ,OCbhB,MAAyB,4BCGV,SAASG,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,GAAI5B,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OAC9C,GAAmD2B,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAExB,OACE,iCACE,4BACGhC,EADH,KACWE,MAEX,mBACEU,UAAWC,EACXO,KAAK,SACLpB,KAAMA,EACNiC,SAAUF,EACVG,QAAS,kBAAMJ,EAAcF,IAL/B,SAOGG,EAAa,cAAgB,cClBtC,MAAqB,wBCIN,SAASI,EAAT,GAAkC,IAAXT,EAAU,EAAVA,OAC5BtB,GAASC,EAAAA,EAAAA,MAATD,KAEFgC,EAAgB,OAAGhC,QAAH,IAAGA,OAAH,EAAGA,EAAMsB,QAAO,SAAAR,GAAO,OAC3CA,EAAQlB,KAAKqC,cAAcC,SAASZ,EAAOW,kBAG7C,GAAID,EACF,OACE,wBACGA,EAAiBG,KAAI,gBAAGX,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,eAAIU,UAAWC,EAAf,UACE,SAACc,EAAD,CAAaC,GAAIA,EAAI5B,KAAMA,EAAME,OAAQA,KADjB0B,QCXrB,SAASY,IACtB,OAA4BzC,EAAAA,EAAAA,UAAS,IAArC,eAAO2B,EAAP,KAAee,EAAf,KAMA,OACE,4BACE,uCACA,SAAC3C,EAAD,KACA,sCACA,SAAC2B,EAAD,CAAQC,OAAQA,EAAQlB,aATP,SAAAO,GACnB0B,EAAU1B,OASR,SAACoB,EAAD,CAAaT,OAAQA","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsApi';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    data.some(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : addContact({\n          name: name,\n          number: number,\n        });\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={e => handleChange(e.target.value)}\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactItem_button__IRFBz\"};","import { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <span>\n        {name}: {number}\n      </span>\n      <button\n        className={s.button}\n        type=\"submit\"\n        name={name}\n        disabled={isDeleting}\n        onClick={() => deleteContact(id)}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactList_li__dzNT+\"};","import ContactItem from 'components/ContactItem/ContactItem';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ filter }) {\n  const { data } = useGetContactsQuery();\n\n  const contactsFiltered = data?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  if (contactsFiltered) {\n    return (\n      <ul>\n        {contactsFiltered.map(({ id, name, number }) => (\n          <li className={s.li} key={id}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useState } from 'react';\n\nexport default function ContactsPage() {\n  const [filter, setFilter] = useState('');\n\n  const handleChange = e => {\n    setFilter(e);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      <ContactList filter={filter} />\n    </div>\n  );\n}\n"],"names":["ContactForm","useState","name","setName","number","setNumber","data","useGetContactsQuery","useAddContactMutation","addContact","handleChange","evt","target","value","className","s","onSubmit","e","preventDefault","some","contact","alert","type","pattern","title","onChange","required","Filter","filter","ContactItem","id","useDeleteContactMutation","deleteContact","isDeleting","isLoading","disabled","onClick","ContactList","contactsFiltered","toLowerCase","includes","map","ContactsPage","setFilter"],"sourceRoot":""}
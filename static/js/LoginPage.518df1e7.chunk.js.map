{"version":3,"file":"static/js/LoginPage.518df1e7.chunk.js","mappings":"kTAEaA,EAAOC,EAAAA,GAAAA,KAAH,iKAUJC,EAAWD,EAAAA,GAAAA,SAAH,8CAIRE,EAAQF,EAAAA,GAAAA,MAAH,+FAMLG,EAAQH,EAAAA,GAAAA,MAAH,gDAILI,EAASJ,EAAAA,GAAAA,OAAH,+C,SCnBJ,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAqCC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,YAAgBC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,UAEhBC,EAAY,mCAAG,WAAMC,GAAN,wEACnBA,EAAEC,iBADiB,SAEbL,EAAM,CAAEP,MAAOA,EAAOE,SAAUA,IAFnB,OAGnBD,EAAS,IACTE,EAAY,IACZU,EAAAA,GAAAA,QAAc,mCALK,2CAAH,sDAQZC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOf,EAASgB,GAClB,IAAK,WACH,OAAOd,EAAYc,GACrB,QACE,SAgBN,OAZAC,EAAAA,EAAAA,YAAU,WACJT,GACFL,GACEe,EAAAA,EAAAA,IAAc,CACZC,KAAM,CAAEJ,KAAMR,EAAKY,KAAKJ,KAAMhB,MAAOQ,EAAKY,KAAKpB,OAC/CqB,MAAOb,EAAKa,WAKjB,CAACjB,EAAUK,KAGZ,0BACE,UAACjB,EAAD,CAAM8B,SAAUZ,EAAca,aAAa,KAA3C,WAEE,UAAC7B,EAAD,YACE,UAACC,EAAD,mBAEE,SAACC,EAAD,CACE4B,KAAK,QACLR,KAAK,QACLC,MAAOjB,EACPyB,SAAUX,QAGd,UAACnB,EAAD,uBAEE,SAACC,EAAD,CACE4B,KAAK,WACLR,KAAK,WACLC,MAAOf,EACPuB,SAAUX,WAIhB,SAACjB,EAAD,CAAQ2B,KAAK,SAAb","sources":["pages/LoginPage.styled.js","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 2rem;\n  max-width: 300px;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 0.3rem;\n  align-items: baseline;\n`;\n\nexport const Fieldset = styled.fieldset`\n  display: contents;\n`;\n\nexport const Label = styled.label`\n  display: contents;\n  text-align: left;\n  margin-bottom: -0.75rem;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 13px;\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useLoginMutation } from 'redux/auth/authApi';\nimport { setIsLoggedIn } from 'redux/auth/auth-slice';\nimport { Form, Fieldset, Label, Input, Button } from './LoginPage.styled';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const [login, { data, isSuccess }] = useLoginMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await login({ email: email, password: password });\n    setEmail('');\n    setPassword('');\n    toast.success('You have logged in successfully');\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(\n        setIsLoggedIn({\n          user: { name: data.user.name, email: data.user.email },\n          token: data.token,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, isSuccess]);\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        {/* <Form onSubmit={handleSubmit} autoComplete=\"off\"> */}\n        <Fieldset>\n          <Label>\n            Mail\n            <Input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </Label>\n        </Fieldset>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </div>\n  );\n}\n"],"names":["Form","styled","Fieldset","Label","Input","Button","LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useLoginMutation","login","data","isSuccess","handleSubmit","e","preventDefault","toast","handleChange","target","name","value","useEffect","setIsLoggedIn","user","token","onSubmit","autoComplete","type","onChange"],"sourceRoot":""}